//autogenerated--------------------------------------------------------------------
// 
// This code was generated from material-ui v1.5.0 by reactxx-codemod tool
// (https://github.com/reactxx/reactxx/tree/master/codemod)
// 
//----------------------------------------------------------------------------------

import React from "react";
import { Types } from "reactxx-basic";
import PropTypes from "prop-types";
import { classNames } from "reactxx-basic";
export interface NativeSelectInputProps {
  disabled?: boolean;
  IconComponent?: React.ReactType;
  inputRef?: (
    ref:
      | HTMLSelectElement
      | {
          node: HTMLInputElement;
          value: NativeSelectInputProps["value"];
        }
  ) => void;
  name?: string;
  onChange?: (
    event: React.ChangeEvent<HTMLSelectElement>,
    child: React.ReactNode
  ) => void;
  value?: string | number | boolean;
}
/**
 * @ignore - internal component.
 */

export type Shape = Types.OverwriteShape<{
  props: NativeSelectInputProps;
}>;

const NativeSelectInput: Types.CodeSFCWeb<Shape> = props => {
  const {
    children,
    classes,
    className,
    disabled,
    IconComponent,
    inputRef,
    name,
    onChange,
    value,
    ...other
  } = props;
  return (
    <div className={classes.root}>
      <select
        className={classNames(
          classes.select,
          disabled && classes.disabled,
          className
        )}
        name={name}
        disabled={disabled}
        onChange={onChange}
        value={value}
        ref={inputRef}
        {...other as any}
      >
        {children}
      </select>
      <IconComponent className={classes.icon} />
    </div>
  );
};

export default NativeSelectInput;
