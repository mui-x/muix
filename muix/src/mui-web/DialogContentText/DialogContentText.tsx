//autogenerated--------------------------------------------------------------------
// 
// This code was generated from material-ui v3.0.0 by reactxx-codemod tool
// (https://github.com/reactxx/reactxx/tree/master/codemod)
// 
//----------------------------------------------------------------------------------

import { TCommon, Types, TProvider, WithStyleCreator as TWithStyleCreator } from 'reactxx-basic';
import withStyles, { Theme, toAtomic } from '../styles/withStyles';
// @inheritedComponent Typography
import React from "react";
import PropTypes from "prop-types";
import Typography from "../Typography/Typography";
import { StandardProps } from "..";
import { TypographyProps } from "../Typography/Typography";
export interface DialogContentTextProps
  extends StandardProps<TypographyProps, DialogContentTextClassKey> {}
export type DialogContentTextClassKey = "root";
const styles = {
  /* Styles applied to the root element. */
  root: {}
};

const DialogContentText: Types.CodeSFCWeb<Shape> & {
  muiName?: string;
} = props => {
  return (
    <Typography
      component="p"
      variant="subheading"
      color="textSecondary"
      {...props as any}
    />
  );
};

export interface Shape extends Types.ShapeDefault {
  common: TCommon.ShapeTexts<DialogContentTextClassKey>,
  props: DialogContentTextProps
  style: 'Text'
  theme: Theme
}
export type ComponentType = React.ComponentClass<Types.PropsX<Shape>> & TProvider<Shape>
export type CodeComponentType = Types.CodeComponentType<Shape>
export type SheetCreatorX = Types.SheetCreatorX<Shape>
export type PropsX = Types.PropsX<Shape>
export type CodeProps = Types.CodePropsWeb<Shape>
export type WithStyleCreator = TWithStyleCreator<Shape>

export const defaultProps  = DialogContentText.defaultProps = {} as CodeProps;
export const DialogContentTextCode: CodeComponentType = DialogContentText as any
export const DialogContentTextStyles: SheetCreatorX = styles as any
export const DialogContentTextCreator: WithStyleCreator = withStyles<Shape>(DialogContentTextStyles, DialogContentTextCode, {isMui:true, defaultProps});
export const DialogContentTextComponent: React.ComponentType<PropsX> = DialogContentTextCreator();
if ((DialogContentText as any).muiName) (DialogContentTextComponent as any).muiName = (DialogContentText as any).muiName;


export default DialogContentTextComponent
