//autogenerated--------------------------------------------------------------------
// 
// This code was generated from material-ui v3.0.0 by reactxx-codemod tool
// (https://github.com/reactxx/reactxx/tree/master/codemod)
// 
//----------------------------------------------------------------------------------

import { TCommon, Types, TProvider, WithStyleCreator as TWithStyleCreator } from 'reactxx-basic';
import withStyles, { Theme, toAtomic } from '../styles/withStyles';
import React from "react";
import PropTypes from "prop-types";
import { classNames } from "reactxx-basic";
import { StandardProps } from "..";
export interface TableHeadProps
  extends StandardProps<TableHeadBaseProps, TableHeadClassKey> {
  component?: React.ReactType<TableHeadBaseProps>;
}
export type TableHeadClassKey = "root";
export type TableHeadBaseProps = React.HTMLAttributes<HTMLTableSectionElement>;
const styles = {
  /* Styles applied to the root element. */
  root: {
    display: "table-header-group"
  }
};

class TableHead extends React.Component<CodeProps, any> {
  static defaultProps: CodeProps;
  static muiName;
  static displayName;
  static contextTypes;
  static childContextTypes;
  static options;

  getChildContext() {
    // eslint-disable-line class-methods-use-this
    return {
      tablelvl2: {
        variant: "head"
      }
    };
  }

  render() {
    const {
      $system: { theme },
      classes,
      className,
      component: Component,
      ...other
    } = this.props;
    return (
      <Component
        className={classNames(classes.root, className)}
        {...other as any}
      />
    );
  }
}

TableHead.childContextTypes = {
  tablelvl2: PropTypes.object
};

export interface Shape extends Types.ShapeDefault {
  common: TCommon.ShapeTexts<TableHeadClassKey>,
  props: TableHeadProps,
  theme: Theme
}
export type ComponentType = React.ComponentClass<Types.PropsX<Shape>> & TProvider<Shape>
export type CodeComponentType = Types.CodeComponentType<Shape>
export type SheetCreatorX = Types.SheetCreatorX<Shape>
export type PropsX = Types.PropsX<Shape>
export type CodeProps = Types.CodePropsWeb<Shape>
export type WithStyleCreator = TWithStyleCreator<Shape>

export const defaultProps  = TableHead.defaultProps = {
  component: 'thead'
} as CodeProps;
export const TableHeadCode: CodeComponentType = TableHead as any
export const TableHeadStyles: SheetCreatorX = styles as any
export const TableHeadCreator: WithStyleCreator = withStyles<Shape>(TableHeadStyles, TableHeadCode, {isMui:true, defaultProps});
export const TableHeadComponent: React.ComponentClass<PropsX> = TableHeadCreator();
if ((TableHead as any).muiName) (TableHeadComponent as any).muiName = (TableHead as any).muiName;


export default TableHeadComponent
