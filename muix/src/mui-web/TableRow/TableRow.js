//autogenerated--------------------------------------------------------------------
//
// This code was generated from material-ui v1.5.0 by reactxx-codemod tool
// (https://github.com/reactxx/reactxx/tree/master/codemod)
//
//----------------------------------------------------------------------------------

import React from "react";
import PropTypes from "prop-types";
import { classNames } from "reactxx-basic";
import withStyles from "../styles/withStyles";
export const styles = theme => ({
  /* Styles applied to the root element. */
  root: {
    color: "inherit",
    display: "table-row",
    height: 48,
    verticalAlign: "middle",
    // We disable the focus ring for mouse, touch and keyboard users.
    outline: "none",
    "&.selected82": {
      backgroundColor:
        theme.palette.type === "light"
          ? "rgba(0, 0, 0, 0.04)" // grey[100]
          : "rgba(255, 255, 255, 0.08)"
    },
    "&.hover82:hover": {
      backgroundColor:
        theme.palette.type === "light"
          ? "rgba(0, 0, 0, 0.07)" // grey[200]
          : "rgba(255, 255, 255, 0.14)"
    }
  },

  /* Styles applied to the root element if `selected={true}`. */
  selected: {
    NAME$selected82: true
  },

  /* Styles applied to the root element if `hover={true}`. */
  hover: {
    NAME$hover82: true
  },

  /* Styles applied to the root element if table variant = 'head'. */
  head: {
    height: 56
  },

  /* Styles applied to the root element if table variant = 'footer'. */
  footer: {
    height: 56
  }
});
/**
 * Will automatically set dynamic row height
 * based on the material table element parent (head, body, etc).
 */

function TableRow(props, context) {
  const {
    $system: { theme },
    classes,
    className: classNameProp,
    component: Component,
    hover,
    selected,
    ...other
  } = props;
  const { tablelvl2 } = context;
  const className = classNames(
    classes.root,
    tablelvl2 && tablelvl2.variant === "head" && classes.head,
    tablelvl2 && tablelvl2.variant === "footer" && classes.footer,
    hover && classes.hover,
    selected && classes.selected,
    classNameProp
  );
  return <Component className={className} {...other} />;
}

TableRow.contextTypes = {
  tablelvl2: PropTypes.object
};
export const defaultProps = (TableRow.defaultProps = {
  component: "tr",
  hover: false,
  selected: false
});

export const TableRowCode = TableRow;
export const TableRowCreator = withStyles(styles, TableRow, {
  isMui: true,
  defaultProps
});
export const TableRowComponent = TableRowCreator();
if (TableRow.muiName) TableRowComponent.muiName = TableRow.muiName;
export default TableRowComponent;
