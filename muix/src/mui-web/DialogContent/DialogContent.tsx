//autogenerated--------------------------------------------------------------------
// 
// This code was generated from material-ui v3.0.0 by reactxx-codemod tool
// (https://github.com/reactxx/reactxx/tree/master/codemod)
// 
//----------------------------------------------------------------------------------

import { TCommon, Types, TProvider, WithStyleCreator as TWithStyleCreator } from 'reactxx-basic';
import withStyles, { Theme, toAtomic } from '../styles/withStyles';
import React from "react";
import PropTypes from "prop-types";
import { classNames } from "reactxx-basic";
import { StandardProps } from "..";
export interface DialogContentProps
  extends StandardProps<
      React.HTMLAttributes<HTMLDivElement>,
      DialogContentClassKey
    > {}
export type DialogContentClassKey = "root";
const styles = {
  /* Styles applied to the root element. */
  root: {
    flex: "1 1 auto",
    overflowY: "auto",
    WebkitOverflowScrolling: "touch",
    // Add iOS momentum scrolling.
    padding: "0 24px 24px",
    "&:first-child": {
      paddingTop: 24
    }
  }
};

const DialogContent: Types.CodeSFCWeb<Shape> & {
  muiName?: string;
} = props => {
  const { classes, children, className, ...other } = props;
  return (
    <div className={classNames(classes.root, className)} {...other as any}>
      {children}
    </div>
  );
};

export interface Shape extends Types.ShapeDefault {
  common: TCommon.ShapeTexts<DialogContentClassKey>,
  props: DialogContentProps,
  theme: Theme
}
export type ComponentType = React.ComponentClass<Types.PropsX<Shape>> & TProvider<Shape>
export type CodeComponentType = Types.CodeComponentType<Shape>
export type SheetCreatorX = Types.SheetCreatorX<Shape>
export type PropsX = Types.PropsX<Shape>
export type CodeProps = Types.CodePropsWeb<Shape>
export type WithStyleCreator = TWithStyleCreator<Shape>

export const defaultProps  = DialogContent.defaultProps = {} as CodeProps;
export const DialogContentCode: CodeComponentType = DialogContent as any
export const DialogContentStyles: SheetCreatorX = styles as any
export const DialogContentCreator: WithStyleCreator = withStyles<Shape>(DialogContentStyles, DialogContentCode, {isMui:true, defaultProps});
export const DialogContentComponent: React.ComponentType<PropsX> = DialogContentCreator();
if ((DialogContent as any).muiName) (DialogContentComponent as any).muiName = (DialogContent as any).muiName;


export default DialogContentComponent
