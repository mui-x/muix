//autogenerated--------------------------------------------------------------------
// 
// This code was generated from material-ui v3.0.0 by reactxx-codemod tool
// (https://github.com/reactxx/reactxx/tree/master/codemod)
// 
//----------------------------------------------------------------------------------


const code = `

# Tooltips

<p class="description">Tooltips display informative text when users hover over, focus on, or tap an element.</p>

When activated, [Tooltips](https://material.io/design/components/tooltips.html) display a text label identifying an element, such as a description of its function.

## Simple Tooltips

!ReactxxDocExample[tooltips/SimpleTooltips]

## Positioned Tooltips

The \`Tooltip\` has 12 **placements** choice.
They donâ€™t have directional arrows; instead, they rely on motion emanating from the source to convey direction.

!ReactxxDocExample[tooltips/PositionedTooltips]

## Controlled Tooltips

You can use the \`open\`, \`onOpen\` and \`onClose\` properties to control the behavior of the tooltip.

!ReactxxDocExample[tooltips/ControlledTooltips]

## Triggers

You can define the types of events that cause a tooltip to show.

!ReactxxDocExample[tooltips/TriggersTooltips]

## Transitions

Use a different transition.

!ReactxxDocExample[tooltips/TransitionsTooltips]

## Showing and hiding

The tooltip is normally shown immediately when the user's mouse hovers over the element, and hides immediately when the user's mouse leaves. A delay in showing or hiding the tooltip can be added through the properties \`enterDelay\` and \`leaveDelay\`, as shown in the Controlled Tooltips demo above.

On mobile, the tooltip is displayed when the user longpresses the element and hides after a delay of 1500ms. You can disable this feature with the \`disableTouchListener\` property.

!ReactxxDocExample[tooltips/DelayTooltips]

## Disabled Elements

By default disabled elements like \`Button\` do not trigger user interactions so a \`Tooltip\` will not activate on normal events like hover. To accomodate disabled elements, add a simple wrapper element like a \`span\`.

!ReactxxDocExample[tooltips/DisabledTooltips]

## Customized Tooltips

!ReactxxDocExample[tooltips/CustomizedTooltips]

## Variable Width

The \`Tooltip\` wraps long text by default to make it readable.

!ReactxxDocExample[tooltips/VariableWidth]
`
export default code
    