//autogenerated--------------------------------------------------------------------
// 
// This code was generated from material-ui v3.0.0 by reactxx-codemod tool
// (https://github.com/reactxx/reactxx/tree/master/codemod)
// 
//----------------------------------------------------------------------------------

import React from 'react';
import PropTypes from 'prop-types';
import withStylesCreator from 'reactxx-mui-web/styles/withStyles';
import Popper from 'reactxx-mui-web/Popper/Popper';
import Typography from 'reactxx-mui-web/Typography/Typography';
import Button from 'reactxx-mui-web/Button/Button';
import Fade from 'reactxx-mui-web/Fade/Fade';
import Paper from 'reactxx-mui-web/Paper/Paper';
import toRenderProps from 'recompose/toRenderProps';
import withState from 'recompose/withState';
const WithState = toRenderProps(withState('anchorEl', 'updateAnchorEl', null));

const styles = theme => ({
  typography: {
    padding: theme.spacing.unit * 2
  }
});

function RenderPropsPopper(props) {
  const {
    classes
  } = props;
  return <WithState>
      {({
      anchorEl,
      updateAnchorEl
    }) => {
      const open = Boolean(anchorEl);
      const id = open ? 'render-props-popper' : null;
      return <React.Fragment>
            <Button aria-describedby={id} variant="contained" onClick={event => {
          updateAnchorEl(anchorEl ? null : event.currentTarget);
        }}>
              Toggle Popper
            </Button>
            <Popper id={id} open={open} anchorEl={anchorEl} transition>
              {({
            TransitionProps
          }) => <Fade {...(TransitionProps as any)} timeout={350}>
                  <Paper>
                    <Typography className={classes.typography}>
                      The content of the Popper.
                    </Typography>
                  </Paper>
                </Fade>}
            </Popper>
          </React.Fragment>;
    }}
    </WithState>;
}

RenderPropsPopper['propTypes'] = {
  classes: PropTypes.object.isRequired
};
export default withStylesCreator((styles as any), RenderPropsPopper)();